(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{323:function(t,a,s){t.exports=s.p+"assets/img/01.16f029ea.png"},360:function(t,a,s){"use strict";s.r(a);var v=s(26),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),v("h2",{attrs:{id:"内存模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存模型"}},[t._v("#")]),t._v(" 内存模型")]),t._v(" "),v("p",[v("img",{attrs:{src:s(323),alt:"内存模型"}})]),t._v(" "),v("ul",[v("li",[t._v("线程共享的数据区\n"),v("ul",[v("li",[t._v("方法区")]),t._v(" "),v("li",[t._v("堆")])])]),t._v(" "),v("li",[t._v("线程私用的数据区\n"),v("ul",[v("li",[t._v("虚拟机栈")]),t._v(" "),v("li",[t._v("本地方法栈")]),t._v(" "),v("li",[t._v("程序计数器")])])])]),t._v(" "),v("h2",{attrs:{id:"内存回收"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存回收"}},[t._v("#")]),t._v(" 内存回收")]),t._v(" "),v("p",[t._v("线程私用的数据区的内存回收非常直接，随线程生而生，随线程去而去，当线程销毁时，内存就被释放了。")]),t._v(" "),v("p",[t._v("线程共享的数据区则通过垃圾回收机制进行管理。")]),t._v(" "),v("ul",[v("li",[t._v("垃圾标记算法：可达性分析算法。")]),t._v(" "),v("li",[t._v("垃圾回收算法：分代收集算法。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);