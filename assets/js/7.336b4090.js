(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{324:function(t,s,a){t.exports=a.p+"assets/img/01.66310572.png"},366:function(t,s,a){"use strict";a.r(s);var v=a(26),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),v("h2",{attrs:{id:"内存模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存模型"}},[t._v("#")]),t._v(" 内存模型")]),t._v(" "),v("p",[v("img",{attrs:{src:a(324),alt:"内存模型"}})]),t._v(" "),v("p",[t._v("Node.js 程序在运行时所占用的内存称为"),v("strong",[t._v("常驻内存")]),t._v("。")]),t._v(" "),v("p",[t._v("常驻内存由以下部分组成：")]),t._v(" "),v("ul",[v("li",[t._v("代码区：程序代码。")]),t._v(" "),v("li",[t._v("栈：局部变量。")]),t._v(" "),v("li",[t._v("堆：对象、闭包上下文。")]),t._v(" "),v("li",[t._v("堆外内存：Buffer 数据。")])]),t._v(" "),v("h2",{attrs:{id:"内存回收"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存回收"}},[t._v("#")]),t._v(" 内存回收")]),t._v(" "),v("p",[t._v("栈的内存回收非常直接，当程序离开某作用域后，其栈指针下移（回退），然后整个作用域的局部变量都会出栈，内存完成回收。")]),t._v(" "),v("p",[t._v("堆的内存回收则通过 V8 的垃圾回收机制进行管理。")]),t._v(" "),v("ul",[v("li",[t._v("垃圾标记算法：可达性分析算法。")]),t._v(" "),v("li",[t._v("垃圾回收算法：分代收集算法。")])])])}),[],!1,null,null,null);s.default=_.exports}}]);